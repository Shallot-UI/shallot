// This is an internal-only util until we decide whether it's the right way to
// approach removing props from being intercepted by the dom. Ideally we have
// a more dynamic solution similar to pullProps.
const INTERNAL_ALL_SHALLOT_PROP_NAMES = [
  'borderWidth',
  'borderColor',
  'borderPosition',
  'animation',
  'placeholderColor',
  'backgroundColor',
  'textColor',
  'borderColor',
  'fillColor',
  'cursor',
  'elevation',
  'grow',
  'flex',
  'shrink',
  'wrap',
  'alignLeft',
  'alignRight',
  'alignCenter',
  'radius',
  'unitWidth',
  'minUnitWidth',
  'maxUnitWidth',
  'unitHeight',
  'minUnitHeight',
  'maxUnitHeight',
  'transition',
  'font',
  'typeface',
  'fullHeight',
  'fullWidth',
  'unitsAround',
  'unitsAbove',
  'unitsBelow',
  'unitsLeft',
  'unitsRight',
  'alignTop',
  'alignBottom',
  'alignMiddle',
  'uppercase',
  'lowercase',
  'capitalize',
  'fontSize',
  'lineHeight',
  'underline',
  'alignLeft',
  'alignRight',
  'alignCenter',
  'alignTop',
  'alignBottom',
  'alignMiddle',
  'letterSpacing',
  'leftText',
  'centerText',
  'rightText',
  'justifyText',
  'unitPadding',
  'unitPaddingAbove',
  'unitPaddingBelow',
  'unitPaddingLeft',
  'unitPaddingRight',
  'display',
] as const

// This is for use with styled-components' shouldForwardProp prop. Unfortunately,
// they type their props as string | number, so we have to cast to the union
// type of our prop names.
export const INTERNAL_shouldForwardProp = (prop: string | number) =>
  !INTERNAL_ALL_SHALLOT_PROP_NAMES.includes(
    prop as (typeof INTERNAL_ALL_SHALLOT_PROP_NAMES)[number],
  )
